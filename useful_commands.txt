# go to project folder
cd Projects/recipe-app-api/
cd github/recipe-app-api/

# build the docker image after adding/updating python modules
docker-compose build

# create app (startproject)
docker-compose run app sh -c "django-admin.py startproject app ."

# test the app and lint it
docker-compose run app sh -c "python manage.py test && flake8"

# create core part of app
docker-compose run app sh -c "python manage.py startapp core"

# Migrations are Djangoâ€™s way of propagating changes you make to your models
# (adding a field, deleting a model, etc.) into your database schema.
# RUN every time the model is changed
docker-compose run app sh -c "python manage.py makemigrations core"

# Create user part of app
# --rm: remove the container and keep the system cleaner
docker-compose run --rm app sh -c "python manage.py startapp user"

# create app recipe
docker-compose run --rm app sh -c "python manage.py startapp recipe"
  - add the created app in INSTALLED_APPS (settings.py)

  - add tests for the new model (test_models.py)
  - create recipe model: add model (models.py)
  - make migrations (docker-compose run app sh -c "python manage.py makemigrations")
  - add admin.site.register (admin.py)

  - START CREATING TESTS (200 CREATED, 400 BAD REQ) (test_tags_api.py)
  - CREATE SERIALIZER (serializers.py)
  - CREATE VIEWS (views.py)
  - CREATE ROUTER URLS (urls.py)
  - for new features modify:
    [test_models.py] -> [models.py] -> [`makemigrations`] ->
    test_tags_api.py -> [serializers.py] -> views.py

# start web service
docker-compose up
